This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Apr 18 2024
Include files last modified date:    Jul 23 2021
==========================================================================

==========================================================================
Caching Murphi Release 5.5.0
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.5.0 is based on various versions of Murphi.
Caching Murphi Release 5.5.0 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: ./protocols/exec/TL-C_In_M_data/TL-C_In_M_data_inv34
===========================================
  You are using LS algorithm.  
===========================================

===== Startstates are generated! =====
Carelist Layer 0: Tree[1].cache[1].state Tree[2].cache[1].state Tree[3].cache[1].state Tree[4].cache[1].state Tree[5].cache[1].state Tree[6].cache[1].state Tree[7].cache[1].state 
Carelist Layer 1: Tree[node].chanA[node].opcode Tree[node].chanA[node].addr Tree[node].cache[node].state Tree[node].cache[node].mark Tree[node].directory[node][node].state Tree[node].master_pending Tree[node].chanC[node].opcode Tree[node].chanB[node].opcode Tree[node].chanB[node].para Tree[node].chanB[node].addr Tree[node].chanD[node].opcode Tree[node].chanD[node].para Tree[node].chanD[node].addr Tree[node].chanC[node].addr Tree[node].directory[node][node].addr Tree[node].chanC[node].para Tree[node].chanA[node].para Tree[node].slave_pending[node] 
Carelist Layer 2: Tree[node].chanE[node].opcode Tree[node].chanE[node].addr 
Attr: Tree[node].chanE[node].opcode Level: 2 Wi: 2
Attr: Tree[node].chanA[node].para Level: 1 Wi: 4
Attr: Tree[node].chanC[node].para Level: 1 Wi: 4
Attr: Tree[node].directory[node][node].addr Level: 1 Wi: 4
Attr: Tree[node].chanC[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanD[node].para Level: 1 Wi: 4
Attr: Tree[node].chanD[node].opcode Level: 1 Wi: 4
Attr: Tree[6].cache[1].state Level: 0 Wi: 8
Attr: Tree[2].cache[1].state Level: 0 Wi: 8
Attr: Tree[5].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanB[node].addr Level: 1 Wi: 4
Attr: Tree[4].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].cache[node].state Level: 1 Wi: 4
Attr: Tree[node].slave_pending[node] Level: 1 Wi: 4
Attr: Tree[3].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].directory[node][node].state Level: 1 Wi: 4
Attr: Tree[7].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanA[node].addr Level: 1 Wi: 4
Attr: Tree[node].chanA[node].opcode Level: 1 Wi: 4
Attr: Tree[node].cache[node].mark Level: 1 Wi: 4
Attr: Tree[node].master_pending Level: 1 Wi: 4
Attr: Tree[1].cache[1].state Level: 0 Wi: 8
Attr: Tree[node].chanC[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanB[node].opcode Level: 1 Wi: 4
Attr: Tree[node].chanE[node].addr Level: 2 Wi: 2
Attr: Tree[node].chanB[node].para Level: 1 Wi: 4

===== Init heuristics! =====

Progress Report:

	100000 states explored in 41.83s, with 1646563 rules fired and 66120 states in the queue.
	200000 states explored in 99.55s, with 3463850 rules fired and 94531 states in the queue.
	300000 states explored in 136.94s, with 4815743 rules fired and 155775 states in the queue.
	400000 states explored in 185.53s, with 6836163 rules fired and 210501 states in the queue.
	500000 states explored in 234.77s, with 8670634 rules fired and 256541 states in the queue.
	600000 states explored in 267.69s, with 9963109 rules fired and 324592 states in the queue.
	700000 states explored in 307.11s, with 11711450 rules fired and 392251 states in the queue.
	800000 states explored in 377.72s, with 14643983 rules fired and 423084 states in the queue.
	900000 states explored in 424.56s, with 16448518 rules fired and 474548 states in the queue.
	1000000 states explored in 464.68s, with 18048073 rules fired and 537985 states in the queue.
	1100000 states explored in 508.50s, with 19698002 rules fired and 592743 states in the queue.
	1200000 states explored in 536.78s, with 20845451 rules fired and 667219 states in the queue.
	1300000 states explored in 565.81s, with 22131050 rules fired and 744694 states in the queue.
	1400000 states explored in 610.58s, with 23900403 rules fired and 803018 states in the queue.
	1500000 states explored in 690.47s, with 27165078 rules fired and 823578 states in the queue.
	1600000 states explored in 794.67s, with 31332427 rules fired and 811039 states in the queue.
	1700000 states explored in 823.32s, with 32400185 rules fired and 883790 states in the queue.
	1800000 states explored in 855.75s, with 33550917 rules fired and 951994 states in the queue.
	1900000 states explored in 915.88s, with 35709584 rules fired and 985241 states in the queue.
	2000000 states explored in 961.85s, with 37299122 rules fired and 1032304 states in the queue.
	2100000 states explored in 994.54s, with 38505371 rules fired and 1097369 states in the queue.
	2200000 states explored in 1017.42s, with 39547537 rules fired and 1180483 states in the queue.
	2300000 states explored in 1042.33s, with 40634794 rules fired and 1261124 states in the queue.
	2400000 states explored in 1073.57s, with 41801130 rules fired and 1331724 states in the queue.
	2500000 states explored in 1121.23s, with 43609120 rules fired and 1384738 states in the queue.
	2600000 states explored in 1193.12s, with 46447589 rules fired and 1411859 states in the queue.

==========================================================================

Result:

	Invariant "test_reachable_state_34" failed.

State Space Explored:

	2635124 states, 47374260 rules fired in 1215.52s.

Analysis of State Space:

	There are rules that are never fired.
	If you are running with symmetry, this may be why.  Otherwise,
	please run this program with "-pr" for the rules information.
