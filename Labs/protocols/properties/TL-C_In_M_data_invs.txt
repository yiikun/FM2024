invariant "test_reachable_state_1"
forall c:lineType do
!( Tree[1].cache[1].state = None & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_2"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Trunk & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Tip )
endforall;

invariant "test_reachable_state_3"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Trunk & Tree[6].cache[1].state = Tip & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_4"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Tip & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_5"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Tip & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_6"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Tip & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_7"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Tip & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_8"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = Trunk & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Tip & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_9"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = Trunk & Tree[4].cache[1].state = Tip & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_10"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = Tip & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_11"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = Tip & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_12"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = Tip & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_13"
forall c:lineType do
!( Tree[1].cache[1].state = Trunk & Tree[2].cache[1].state = Tip & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_14"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_15"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_16"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_17"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_18"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = None & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = Branch)
endforall;

invariant "test_reachable_state_19"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_20"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_21"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = None & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None)
endforall;

invariant "test_reachable_state_22"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = None & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_23"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_24"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_25"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_26"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_27"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_28"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_29"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_30"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = None & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_31"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_32"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_33"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_34"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = None & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_35"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_36"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = None & Tree[7].cache[1].state = Branch )
endforall;

invariant "test_reachable_state_37"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = None )
endforall;

invariant "test_reachable_state_38"
forall c:lineType do
!( Tree[1].cache[1].state = Tip & Tree[2].cache[1].state = Branch & Tree[4].cache[1].state = Branch & Tree[5].cache[1].state = Branch & Tree[3].cache[1].state = Branch & Tree[6].cache[1].state = Branch & Tree[7].cache[1].state = Branch )
endforall;
